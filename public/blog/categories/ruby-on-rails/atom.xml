<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby on Rails | Dale Ma]]></title>
  <link href="http://dale-ma.heroku.com/blog/categories/ruby-on-rails/atom.xml" rel="self"/>
  <link href="http://dale-ma.heroku.com/"/>
  <updated>2012-04-09T08:48:40+08:00</updated>
  <id>http://dale-ma.heroku.com/</id>
  <author>
    <name><![CDATA[Dale Ma]]></name>
    <email><![CDATA[dalema22@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gems 混搭空想]]></title>
    <link href="http://dale-ma.heroku.com/blog/2012/04/09/mix-gem/"/>
    <updated>2012-04-09T08:43:00+08:00</updated>
    <id>http://dale-ma.heroku.com/blog/2012/04/09/mix-gem</id>
    <content type="html"><![CDATA[<h2>空想所根據的規則</h2>

<p>Ruby 的 Gems 五花八門，其中不乏很多有特色的 Gems 。常常在想是不是有可能利用這些 Gems 搭出有趣但不一定要實用的服務呢？</p>

<p>大致上， Gems 可以分為 Front-end 和 Back-end 以及 Mixed ，我混搭的第一步就是先搜集一些有趣的Gems，然後再隨機的組合。基本上是從 Front-end 和 Back-end 裡面各抽出一個候選人，接著想想搭在一起會變成什麼玩意。當然，搭出來的可能是狗屁不通的結果，但是，一切都以好玩為出發點。</p>

<h2>Front-end gems</h2>

<p>Front-end 比較偏向內容的呈現，可能是輸出圖形，也可能是輸出文字或是兩者。</p>

<ul>
<li><a href="https://github.com/imathis/octopress">octopress</a>：知名的部落格架站系統</li>
<li><a href="https://github.com/schacon/showoff">showoff</a>：web 介面的投影片</li>
</ul>


<h2>Back-end gems</h2>

<p>Back-end 以 processing 為主，比較沒有花俏的輸出。</p>

<ul>
<li><a href="https://github.com/tenderlove/mechanize">mechanize</a>：爬蟲，抓網頁很強大，可以指定 referer 來抓一些可能會被檔的網頁。</li>
<li><a href="https://github.com/tenderlove/nokogiri">nokogiri</a>：html / xml 分析器，能透過 xpath 或 css selector 輕鬆取代修改文件。</li>
<li><a href="https://github.com/cardinalblue/rest-core">rest-core</a>：和社群網站 api 串接的工具。</li>
</ul>


<h2>開始做夢</h2>

<h3>octomachine</h3>

<p>第一組上場的候選人是 octopress / mechanize ，他們的結晶是 octomachine ！女士們，先生們，你可曾偷別人的文章發表過？有了 octomachine 你不需要辛苦的手動盜文了！ 它會自動定時地去您指定的網站檢查是否有更新，再自動偷文轉貼到您的 octopress 部落格上！</p>

<h3>octogiri</h3>

<p>第二組，octopress / nokogiri ，合稱 octogiri 。可以幫助你分析你的部落格文章用了多少字，多少 html 標籤等等。</p>

<h3>octorest</h3>

<p>第三組 octopress / rest-core 的 octorest 則是讓你的部落格文章可以一鍵發送到各個社群媒體（ Facebook, Twitter, plurk … oh, and google+ ）</p>

<h3>showmachine</h3>

<p>第四組由 showoff / mechanize 組成的 showmachine 是一個即時將指定的部落格轉成投影片的工具，讓您可以隨時介紹自己的部落格(？)</p>

<h3>showgirl</h3>

<p>  第五組， showoff / octogiri 帶來了 showgirl (我沒拼錯，比較喜歡這樣叫～) ，網頁分析報表軟體。以投影片的方式報告網頁有哪些壞連結，有哪些不符合規範的標籤。</p>

<h3>show-rest</h3>

<p>  最後一組， showoff / rest-core ， show-rest ！這可厲害了，可以把你所有的社群訊息轉成投影片，你不需要一一瀏覽不同網站，只要連到你的投影片網址，最新的動態就一張一張地呈現給你看！如果你是宅到爆表的魔人，你絕對要試試這個！</p>

<h2>More?</h2>

<p>  Front-end 和 Back-end gems 未必要各取其一，也可以都是 Front-end 或都是 Back-end，甚至更多。偶爾來些 gems 的腦力激盪，也是蠻不錯的遊戲。說不定，你的下一個產品就是從這種激盪中生出來的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails - 6 篇文上軌道]]></title>
    <link href="http://dale-ma.heroku.com/blog/2012/03/28/articles-to-rails/"/>
    <updated>2012-03-28T08:55:00+08:00</updated>
    <id>http://dale-ma.heroku.com/blog/2012/03/28/articles-to-rails</id>
    <content type="html"><![CDATA[<p>你覺得假日生活無聊，想找點新樂子，但聰明如你不想和凡夫俗子一樣在夜店泡上一整晚，也許可以開始Ruby on Railse的學習之路。如果你有網站程式的背景，那底下這幾篇文章大概4小時內就可以消化完畢‧可以學到</p>

<ul>
<li><p>安裝Ruby on Rails的最佳做法</p></li>
<li><p>Ruby的語法</p></li>
<li><p>用Rails框架實做含資料庫的網站</p></li>
<li><p>Rails開發者常用的套件(gems)</p></li>
</ul>


<h3><a href="http://blog.eddie.com.tw/2011/04/08/rvm-and-gemsets/">RVM and Gemsets</a></h3>

<p>RVM是Ruby developer必備的實驗室，可以準備很多不同版本的Ruby來跑Project。每個Project的環境需求都不盡相同，有了RVM就不必煩惱在不同環境間切換的困擾。這篇教你如何安裝RVM。</p>

<h3><a href="http://ihower.tw/rails3/installation.html">安裝Rails開發環境</a></h3>

<p>安裝Rails、資料庫，介紹開發環境和Gems。</p>

<h3><a href="http://www.ruby-lang.org/zh_TW/documentation/quickstart/">二十分鐘 Ruby 體驗</a></h3>

<p>非常精美的Ruby教學文件，讓你知道Ruby可不是珠寶店裡的紅寶石...</p>

<h3><a href="http://ihower.tw/rails3/basic.html">打造 CRUD 應用程式</a></h3>

<p>和下面一篇是連貫的，先實作完這篇的程式，再看下篇。這篇是Rails新手的重點文章。</p>

<h3><a href="http://ihower.tw/rails3/restful.html">RESTful 應用程式</a></h3>

<p>主要是講RESTful在rails下怎麼達成。看完後你已經可以100%唬住Rails門外漢了！</p>

<h3><a href="http://blog.xdite.net/posts/2011/10/09/10-ruby-developer-must-have-tools/">十個 Ruby Web Developer 應該熟悉的工具</a></h3>

<p>我認為Git是裡面最需要也最花時間來熟悉的，git init, git add, git commit, git branch, git checkout等是git很常用到的指令。從svn轉戰git會發現有很多觀念不同，不小心就會誤用。</p>

<h3>More gems…</h3>

<p>Rails有很多前人寫好的套件，花在了解套件的時間上甚至會比寫自己的code還多。</p>

<ul>
<li><a href="https://github.com/chriseppstein/compass">compass</a> (SCSS強化版，簡單想就是用變數和類物件導向的CSS)</li>
<li><a href="https://github.com/plataformatec/devise">devise</a> (認證工具，代表不用刻登入、登出的UI和邏輯，YAY!!)</li>
<li><a href="https://github.com/plataformatec/simple_form">simple_form</a> (堪稱比Rails內建form_for更好用)</li>
<li><a href="https://github.com/amatsuda/kaminari">kaminari</a> (分頁工具，資料多的時候不需要自己寫分頁邏輯)</li>
<li><a href="https://github.com/dchelimsky/rspec">rspec</a> (比unit test更厲害的Behavioral Driven Development測試工具)</li>
<li><a href="https://github.com/cucumber/cucumber">cucumber</a> (Behavioral Driven Development的工具，先讓你寫說明文件再開發，說明文件是程式化的語法，跟rspec是好夥伴)</li>
</ul>


<h3>Fun projects…</h3>

<p><a href="https://github.com/imathis/octopress">octopress</a>
有趣的部落格軟體，不需要用資料庫，而是用git來控制文章，十分適合hacker的玩具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress - 章魚先生，你好]]></title>
    <link href="http://dale-ma.heroku.com/blog/2012/03/25/first-trial-on-octopress/"/>
    <updated>2012-03-25T14:05:00+08:00</updated>
    <id>http://dale-ma.heroku.com/blog/2012/03/25/first-trial-on-octopress</id>
    <content type="html"><![CDATA[<p>被RoR染指了三個禮拜後，開始嘗試轟動台灣萬千RD的"Octopress"。感覺，Not BAAAAAAD！如果想找個屎坑來放一些可能沒人看的玩意，可以試試章魚先生。</p>

<p><a href="http://octopress.org"><img class="right" src="http://octopress.org/images/logo.png"></a></p>

<p>在開始之前，需要準備以下工具：</p>

<ul>
<li>Github帳號 (包含git工具，請參考<a href="http://help.github.com/mac-set-up-git/">這裡</a>)</li>
<li>RVM (可以擁有多重Ruby版本的套件，安裝方式可以<a href="http://octopress.org/docs/setup/rvm/">看這</a>)</li>
<li>Ruby 1.9.2 (比較舊版的Ruby，請透過RVM安裝)</li>
<li>(optional) Heroku帳號，用來發佈你的web，也可以發佈到Github。</li>
<li>充滿好奇心的小腦袋</li>
</ul>


<h3>Step 1. Install Ruby</h3>

<pre><code>rvm install 1.9.2
# 下面無法安裝的解法比較花時間，快速的話可以直接下rvm install 1.9.2 --with-gcc=clang
rvm use 1.9.2
</code></pre>

<p>如果是Mac可能會遇到gcc是LLVM裝不上的問題，可以看這篇<a href="http://blog.yorkxin.org/2012/03/09/ruby-192-with-xcode-43/">解法</a>或你覺得時間很寶貴，可以直接下</p>

<pre><code>rvm install 1.9.2 --with-gcc=clang
</code></pre>

<h3>Step 2. Checkout</h3>

<pre><code>cd /PATH/TO/YOUR/DIRECTORY
git clone git://github.com/imathis/octopress.git # 建議可以先將Octopress Fork到自己的帳戶下再Clone，將來如果想修改核心比較方便
</code></pre>

<h3>Step 3. Install Octopress</h3>

<pre><code>cd octopress
bundle install
rake install
</code></pre>

<h3>Step 4. Configure</h3>

<p>剛開始只需要修改_config.yml即可，可參考<a href="http://octopress.org/docs/configuring/">官網config教學</a></p>

<h3>Step 5. Post</h3>

<pre><code>rake new_post[YOUR_POST_NAME]
</code></pre>

<h3>Step 6. Preview</h3>

<pre><code>rake preview
</code></pre>

<p>然後你就可以看到章魚先生在你的電腦上呈現出你的部落格了！接著你可以發佈到Heroku去，詳細步驟可以參考<a href="http://blog.eddie.com.tw/2011/10/11/how-to-install-octopress-on-heroku/">這裡</a></p>

<h3>完成以上步驟，就可以開始拆解這隻章魚了！</h3>

<p>你可以：</p>

<ul>
<li>試試<a href="http://octopress.org/docs/blogging/plugins/">plugins</a></li>
<li>學學<a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a>，畢竟章魚先生的文章都是用Markdown語法寫的</li>
<li>當個安分的部落客好好寫文章</li>
</ul>

]]></content>
  </entry>
  
</feed>

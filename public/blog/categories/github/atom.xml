<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GitHub | Dale Ma]]></title>
  <link href="http://dale-ma.heroku.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://dale-ma.heroku.com/"/>
  <updated>2012-12-23T12:51:17+08:00</updated>
  <id>http://dale-ma.heroku.com/</id>
  <author>
    <name><![CDATA[Dale Ma]]></name>
    <email><![CDATA[dalema22@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHub - Network圖表學]]></title>
    <link href="http://dale-ma.heroku.com/blog/2012/03/30/github-network/"/>
    <updated>2012-03-30T10:34:00+08:00</updated>
    <id>http://dale-ma.heroku.com/blog/2012/03/30/github-network</id>
    <content type="html"><![CDATA[<p><img src="/images/network.png"></p>

<h3>歡迎蒞臨 GitHub 星球，這裡是由 Geeks 統治的世界...</h3>

<p><img src="/images/menu_network.png"></p>

<p>要研究GitHub Network ，可以選一個有多個人參與的專案來研究一下分支這件事。點選專案，上方的選單會有個 Network 字樣，是讓別人看看這個專案有多少 forks 和 branches 在進行。</p>

<h3>在 GitHub 的世界裡，細胞分裂是一件快速簡單的事</h3>

<p>同一個專案一個使用者只能有一個 fork ，但一個 fork 裡可以有無限多個 branches 。 Fork 最少最少會有一個 master branch (對 git 而言任何開發線都叫 branch )。</p>

<p>舉例來說， Steve 有一個專案叫 Macintosh 。那麼在 GitHub 裡， Steve 會有個 Fork 叫 Setve/Macintosh 。 Bill 某天看到 Macintosh ，也想好好貢獻一己之力，於是他 Fork 了 Steve 的 Macintosh ，叫做 Bill/Macintosh 。 Steve 和 Bill 在自己的 Fork 裡可以有任意數量的 Branches ，例如開發專用的 dev branch ，美術調整專用的 style branch ，撰寫說明文件專用的 doc branch 等。</p>

<h3>除了分裂也融合</h3>

<p>GitHub 的 Network 圖表讓整個專案的進行狀況更清楚，每列代表不同開發者的 Fork ( Repository )，每列裡面會包含1條以上的 branch 。圖表設計是基於 fork 擁有者接下來要做的事情，並不是所有的 fork 都會畫出來。</p>

<p>如果 Steve <code>merge</code>了 Bill 的 code 回自己的 branch ，那麼 Steve 的圖表就不會再顯示出 Bill 。對 Steve 而言，他已經有了最新的 code 。除非 Bill 繼續<code>commit</code>，才會重新回到 Steve 的圖表上。</p>

<p>Network 圖表設計的宗旨在於，讓每個開發者從 code 的角度看整個網路，就像是圖形化的 to-do 清單。如果別人的 code 合併回自己的開發線，那它就沒必要出現在圖表上讓你分神。</p>

<h3>竟然還有圖表熱鍵！</h3>

<p>Network 圖表有些方便的熱鍵，可以用<code>h</code> <code>j</code> <code>k</code> <code>l</code>來上下左右移動( vim  玩家高興嗎？)，<code>shift + h</code> or <code>shift + j</code> or <code>shitf + k</code> or <code>shift + l</code>跳到上下左右的邊界，<code>t</code>來顯示或關閉 branch 名稱。</p>
]]></content>
  </entry>
  
</feed>
